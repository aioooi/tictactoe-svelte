{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Game.svelte",
    "../../Input.svelte",
    "../../InputRadio.svelte",
    "../../Scoreboard.svelte",
    "../../ScoreboardCell.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Game from \"./Game.svelte\";\n</script>\n\n<style>\n  h1 {\n    margin: 2vh auto 1vh;\n  }\n\n  h2 {\n    margin: 1vh auto 1vh;\n  }\n\n  main {\n    margin: 4vh auto 1vh;\n  }\n</style>\n\n<h1>Let's Play: Tic Tac Toe</h1>\n<h2>(implemented using Svelte)</h2>\n<main>\n  <Game />\n</main>\n",
    "<script>\n  import * as ttt from \"../lib/tictactoe/tictactoe.js\";\n\n  import InputRadio from \"./InputRadio.svelte\";\n  import Scoreboard from \"./Scoreboard.svelte\";\n\n  export let handicap = 80;\n  export let playerBegins = true;\n  export let delay = 300;\n\n  const sleep = milliseconds => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n  };\n\n  let game;\n  let state;\n  let finalState;\n  let locked;\n\n  let afterDrawPlayerBegins = true;\n\n  async function newGame(playerBegins = true) {\n    game = new ttt.Game(handicap, playerBegins);\n    state = game.state;\n    finalState = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\n    if (!playerBegins) {\n      locked = true;\n      await sleep(50);\n      game.makeMove();\n    }\n\n    state = game.state;\n    locked = false;\n  }\n\n  let stats;\n\n  const resetStats = () => {\n    stats = {\n      computer: 0,\n      draw: 0,\n      player: 0\n    };\n  };\n\n  async function processResults() {\n    let playerBegins = true;\n    if (game.winner === ttt.COMPUTER) {\n      stats.computer += 1;\n    } else if (game.winner === ttt.PLAYER) {\n      stats.player += 1;\n      playerBegins = false;\n    } else {\n      stats.draw += 1;\n      playerBegins = afterDrawPlayerBegins;\n      afterDrawPlayerBegins = !afterDrawPlayerBegins;\n    }\n\n    finalState = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\n    if (game.winner !== ttt.EMPTY) {\n      let line = game._winningLine;\n\n      line.forEach(e => {\n        finalState[Math.floor(e / 3)][e % 3] = 1;\n      });\n    }\n\n    await sleep(1200);\n    newGame(playerBegins);\n  }\n\n  async function move(i, j) {\n    if (!locked) {\n      locked = true;\n      try {\n        let gameFinished = game.playerMove(i, j);\n        state = game.state;\n\n        if (gameFinished) {\n          processResults();\n        } else {\n          await sleep(Math.floor((0.6 + 0.4 * Math.random()) * delay));\n          gameFinished = game.makeMove();\n          state = game.state;\n\n          if (gameFinished) {\n            processResults();\n          } else {\n            locked = false;\n          }\n        }\n      } catch (e) {\n        console.error(e);\n        locked = false;\n      }\n    }\n  }\n\n  const levels = [\n    { label: \"trivial\", handicap: 90 },\n    { label: \"easy\", handicap: 65 },\n    { label: \"medium\", handicap: 48 },\n    { label: \"hard\", handicap: 24 },\n    { label: \"impossible\", handicap: 5 }\n  ];\n\n  let currentLevel = 0;\n\n  $: {\n    console.log(`level selected ${currentLevel}`);\n    handicap = levels[currentLevel].handicap;\n    resetStats();\n    newGame(playerBegins);\n  }\n</script>\n\n<style>\n  :root {\n    --PLAYED-COLOR: #e9e9e9;\n    --HIGHLIGHT-COLOR: #ffa7a7;\n    --HOVER-COLOR: #fff5f5;\n    --MARKER-COLOR: #black;\n  }\n\n  .board {\n    margin: 0 auto;\n    padding: 0;\n    width: 40vw;\n    height: 40vw;\n    max-width: 40vh;\n    max-height: 40vh; \n    min-width: 308px;\n    min-height: 308px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: 4px;\n  }\n\n  .square {\n    position: relative;\n    width: auto;\n    height: auto;\n    background-color: white;\n    border: 1px solid #c4c4c4;\n    border-radius: 4%;\n    cursor: pointer;\n    color: white;\n    box-shadow: 2px 2px 4px #bbb;\n  }\n\n  .square:hover {\n    background-color: var(--HOVER-COLOR);\n    box-shadow: 1px 1px 2px #aaa;\n  }\n\n  .tag {\n    /* border: 1px dashed magenta; */\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 5vw;\n    line-height: 5vw;\n  }\n\n  .played {\n    background-color: var(--PLAYED-COLOR);\n    cursor: auto;\n    color: var(--MARKER-COLOR);\n    animation: click 300ms ease-out;\n    /* delay iteration-count direction fill-mode; */\n  }\n\n  @keyframes click {\n    from {\n      background-color: var(--HIGHLIGHT-COLOR);\n      color: #fff5f5;\n    }\n    to {\n      background-color: var(--PLAYED-COLOR);\n      color: var(--MARKER-COLOR);\n    }\n  }\n\n  .played:hover {\n    background-color: var(--PLAYED-COLOR);\n  }\n\n  .highlight-winning-line {\n    animation: winning-line 800ms ease-in-out 1;\n  }\n\n  @keyframes winning-line {\n    0% {\n      background-color: var(--PLAYED-COLOR);\n      color: var(--MARKER-COLOR);\n    }\n    50% {\n      background-color: var(--HIGHLIGHT-COLOR);\n      color: #fff5f5;\n    }\n    100% {\n      background-color: var(--PLAYED-COLOR);\n      color: var(--MARKER-COLOR);\n    }\n  }\n</style>\n\n<div>\n  <div class=\"board\">\n    {#each [...Array(3).keys()] as i}\n      {#each [...Array(3).keys()] as j}\n        <div\n          class=\"square\"\n          class:played={state[i][j] !== ttt.EMPTY}\n          class:highlight-winning-line={finalState[i][j] === 1}\n          on:click={() => move(i, j)}>\n          <div class=\"tag\">\n            {@html state[i][j] === ttt.PLAYER ? '&#x0fbe;' : ''}\n            {@html state[i][j] === ttt.COMPUTER ? '&#x262f;' : ''}\n          </div>\n        </div>\n      {/each}\n    {/each}\n  </div>\n  <Scoreboard {stats} />\n  <InputRadio bind:id={currentLevel} label={levels.map(v => v.label)} />\n</div>\n",
    "<script>\n  export let value = \"\";\n  export let disabled = false;\n  export let editOnlyOnce = true;\n\n  const handleInput = () => {\n    if (editOnlyOnce) {\n      disabled = true;\n    }\n  };\n\n  let focus = false;\n\n  const hidePencil = () => {\n    focus = true;\n  };\n</script>\n\n<style>\n  input[type=\"text\"] {\n    text-align: center;\n    margin: 0;\n    width: 95%;\n    border: none;\n    background: none;\n    color: #777;\n    text-transform: uppercase;\n    box-sizing: border-box;\n    border-bottom: 2px solid transparent;\n    margin-bottom: -2px;\n    font-weight: inherit;\n  }\n\n  input[type=\"text\"]:focus {\n    background: #fff5f5;\n    outline: none;\n    border-bottom: 2px solid #ffa7a7;\n  }\n\n  input[type=\"submit\"] {\n    display: none;\n  }\n\n  label {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    padding-left: 0.4em;\n  }\n\n  .hidden {\n    display: none;\n  }\n</style>\n\n<form on:submit|preventDefault={handleInput}>\n  {#if disabled}\n    <input type=\"text\" bind:value disabled />\n  {:else}\n    <div style=\"position:relative\">\n      <label class:hidden={focus}>&#x270E;</label>\n      <input\n        type=\"text\"\n        bind:value\n        on:focusout={handleInput}\n        on:focus={hidePencil} />\n    </div>\n  {/if}\n  <input type=\"submit\" />\n</form>\n",
    "<script>\n  export let label = [\"a\", \"b\"];\n  export let id;\n\n  id = Math.floor(label.length / 2.0);\n</script>\n\n<style>\n  .grid {\n    width: 38vw;\n    min-width: 338px;\n    max-width: 38vh;\n    margin: 2vh auto;\n    display: grid;\n    text-align: center;\n    /* set dynamically in html below: */\n    /* grid-template-columns: 1fr 1fr 1fr; */\n    text-transform: uppercase;\n    grid-gap: 3px;\n    font-size: 11px;\n    font-weight: 300;\n  }\n\n  .radioBtn {\n    display: inline-block;\n    text-align: center;\n  }\n\n  .radioBtn label {\n    display: block;\n    margin-bottom: 1em;\n  }\n\n  input[type=\"radio\"] {\n    -moz-appearance: None;\n    -webkit-appearance: none;\n    border: 1px solid #ccc;\n    background-color: #fff;\n    border-radius: 25%;\n    width: 14px;\n    height: 14px;\n    cursor: pointer;\n  }\n\n  input[type=\"radio\"]:checked {\n    background: #ffa7a7;\n    border: 1px solid #aaa;\n  }\n\n  input[type=\"radio\"]:focus {\n    outline: none;\n  }\n</style>\n\n<div class=\"grid\" style=\"grid-template-columns: repeat({label.length}, 1fr)\">\n  {#each label.map((v, i) => {\n    return { id: i, label: v };\n  }) as l (l.id)}\n    <div class=\"radioBtn\">\n      <label>{l.label}</label>\n      <input type=\"radio\" bind:group={id} value={l.id} />\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  import ScoreboardCell from './ScoreboardCell.svelte';\n\n  export let stats = {\n    computer: 0,\n    draw: 0,\n    player: 0\n  };\n\n  export let name = \"Player\";\n\n  \n\n</script>\n\n<style>\n  .grid {\n    width: 38vw;\n    min-width: 338px;\n    max-width: 38vh;\n    margin: 4vh auto 2vh;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: 300;\n    grid-gap: 3px;\n  }\n</style>\n\n<div class=\"grid\">\n  <ScoreboardCell label={name} value={stats.player} edit={true} />\n  <ScoreboardCell label={'Draw'} value={stats.draw} />\n  <ScoreboardCell label={'Computer'} value={stats.computer} />\n</div>\n\n",
    "<script>\n  import { elasticOut, expoInOut, quartOut } from \"svelte/easing\";\n\n  import Input from './Input.svelte';\n\n  export let label = \"LABEL\";\n  export let value = 0;\n\n  export let edit = false;\n  let disabled = !edit;\n\n  function highlight(node, { duration = 500 }) {\n    const MAXSCALE = 1.8;\n\n    return {\n      duration,\n      css: t => {\n        // const s = elasticOut(t);\n        // const s = expoInOut(t);\n        const s = quartOut(t);\n\n        return `\n           transform: scale(${MAXSCALE - (MAXSCALE - 1.0) * s});\n        `;\n      }\n    };\n  }\n</script>\n\n<style>\n  .cell {\n    padding: 0.4em;\n  }\n</style>\n\n{#each [value] as v (v)}\n  <div in:highlight >\n    {#if edit}\n      <Input bind:value={label} bind:disabled={disabled} />\n    {:else}\n      <div class=\"cell\">{@html label }</div>\n    {/if}\n    <div class=\"cell\">{value}</div>\n  </div>\n{/each}\n"
  ],
  "names": [],
  "mappings": "AAKE,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,AACtB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,AACtB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,AACtB,CAAC;ACwGD,KAAK,AAAC,CAAC,AACL,cAAc,CAAE,OAAO,CACvB,iBAAiB,CAAE,OAAO,CAC1B,aAAa,CAAE,OAAO,CACtB,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAClC,QAAQ,CAAE,GAAG,AACf,CAAC,AAED,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,CACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,EAAE,CACjB,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,AAC9B,CAAC,AAED,sBAAO,MAAM,AAAC,CAAC,AACb,gBAAgB,CAAE,IAAI,aAAa,CAAC,CACpC,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,AAC9B,CAAC,AAED,IAAI,eAAC,CAAC,AAEJ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,cAAc,CAAC,CACrC,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,cAAc,CAAC,CAC1B,SAAS,CAAE,oBAAK,CAAC,KAAK,CAAC,QAAQ,AAEjC,CAAC,AAED,WAAW,oBAAM,CAAC,AAChB,IAAI,AAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,iBAAiB,CAAC,CACxC,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,EAAE,AAAC,CAAC,AACF,gBAAgB,CAAE,IAAI,cAAc,CAAC,CACrC,KAAK,CAAE,IAAI,cAAc,CAAC,AAC5B,CAAC,AACH,CAAC,AAED,sBAAO,MAAM,AAAC,CAAC,AACb,gBAAgB,CAAE,IAAI,cAAc,CAAC,AACvC,CAAC,AAED,uBAAuB,eAAC,CAAC,AACvB,SAAS,CAAE,2BAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,AAC7C,CAAC,AAED,WAAW,2BAAa,CAAC,AACvB,EAAE,AAAC,CAAC,AACF,gBAAgB,CAAE,IAAI,cAAc,CAAC,CACrC,KAAK,CAAE,IAAI,cAAc,CAAC,AAC5B,CAAC,AACD,GAAG,AAAC,CAAC,AACH,gBAAgB,CAAE,IAAI,iBAAiB,CAAC,CACxC,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,cAAc,CAAC,CACrC,KAAK,CAAE,IAAI,cAAc,CAAC,AAC5B,CAAC,AACH,CAAC;AC5LD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAC,CAAC,AAClB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,cAAc,CAAE,SAAS,CACzB,UAAU,CAAE,UAAU,CACtB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CACpC,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,OAAO,AACtB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,MAAM,gBAAC,MAAM,AAAC,CAAC,AACxB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAC,CAAC,AACpB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,YAAY,CAAE,KAAK,AACrB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,AACf,CAAC;AC5CD,KAAK,8BAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAGlB,cAAc,CAAE,SAAS,CACzB,QAAQ,CAAE,GAAG,CACb,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,SAAS,8BAAC,CAAC,AACT,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,wBAAS,CAAC,KAAK,eAAC,CAAC,AACf,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,8BAAC,CAAC,AACnB,eAAe,CAAE,IAAI,CACrB,kBAAkB,CAAE,IAAI,CACxB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,OAAO,+BAAC,QAAQ,AAAC,CAAC,AAC3B,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AACxB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,OAAO,+BAAC,MAAM,AAAC,CAAC,AACzB,OAAO,CAAE,IAAI,AACf,CAAC;ACnCD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CACpB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAClC,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,GAAG,CAChB,QAAQ,CAAE,GAAG,AACf,CAAC;ACGD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,KAAK,AAChB,CAAC"
}